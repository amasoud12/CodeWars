question - https://www.codewars.com/kata/5663f5305102699bad000056/train/python

You are given two arrays a1 and a2 of strings. Each string is composed with letters from a to z. Let x be any string in the first array and y be any string in the second array.

Find max(abs(length(x) âˆ’ length(y)))

If a1 and/or a2 are empty return -1 in each language except in Haskell (F#) where you will return Nothing (None).

Example:
a1 = ["hoqq", "bbllkw", "oox", "ejjuyyy", "plmiis", "xxxzgpsssa", "xxwwkktt", "znnnnfqknaz", "qqquuhii", "dvvvwz"]
a2 = ["cccooommaaqqoxii", "gggqaffhhh", "tttoowwwmmww"]
mxdiflg(a1, a2) --> 13
Bash note:
input : 2 strings with substrings separated by ,
output: number as a string

solution

def mxdiflg(a1, a2):
    max_diff= 0
    l= 0
    for i in range(len(a1)):
        for y in range(len(a2)):
            l= abs(len(a1[i]) - len(a2[y]))
            if l > max_diff:
                max_diff = l
    return max_diff if max_diff>0 else -1
