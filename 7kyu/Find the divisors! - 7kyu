question - https://www.codewars.com/kata/544aed4c4a30184e960010f4/train/python

Create a function named divisors/Divisors that takes an integer n > 1 and returns an array with all of the integer's divisors(except for 1 and the number itself), from smallest to largest. If the number is prime return the string '(integer) is prime' (null in C#, empty table in COBOL) (use Either String a in Haskell and Result<Vec<u32>, String> in Rust).

Examples:
divisors(12) --> [2, 3, 4, 6]
divisors(25) --> [5]
divisors(13) --> "13 is prime"

solution 

def divisors(integer):
    n= []
    max= int(integer**0.5)
    for i in range(2, max+1):

        if integer % i == 0:
            n.append(i)
            if i != integer // i:  
                n.append(integer // i)
    if not n:
        return f'{integer} is prime'
    return sorted(n)
    
    
    
